import{S as d,g as p,m as a,A as m,e as k,n as v,o as B,p as U,c as f,V as H}from"./restructure-CzOa3ZYB.js";const N=new d({identifier:new p(1),value:new p(1)}),V={name:()=>"DAC",length:a,tables:new m(N,t=>t.length/2)},M=(t,e)=>t[e],y=(t,e)=>t[e]<<8|t[e+1],O=(t,e)=>t[e]|t[e+1]<<8,x=(t,e)=>t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3],D=(t,e)=>t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24,E=t=>Array.from(t,e=>e.toString(16).padStart(2,"0")).join(""),_=new TextDecoder("utf-8"),j=t=>_.decode(t),z=t=>{const e=t.reduce((s,n)=>s+n.length,0),i=new Uint8Array(e);let o=0;return t.forEach(s=>{i.set(s,o),o+=s.length}),i};class J{decode(e,i){const o={};let s=e.buffer.slice(e.pos,e.pos+i.length-2);for(;s.length>0;){let n=1;const r=[],g=M(s,0),u=s.slice(n,n+16);n+=16;for(const h of u)r.push(s.slice(n,n+h)),n+=h;s=s.slice(n),o[g]=z(r)}return e.pos+=i.length-2,o}}const X={name:()=>"DHT",length:a,tables:new J},q={name:()=>"DQT",length:a,tables:new m(new d({identifier:new p(1),data:new p(64)}),t=>(t.length-2)/65)},W={name:()=>"DRI",length:a,restartInterval:a},G={name:()=>"EOI"},S={ifd:{"010e":"imageDescription","010f":"make","011a":"xResolution","011b":"yResolution","011c":"planarConfiguration","012d":"transferFunction","013b":"artist","013e":"whitePoint","013f":"primaryChromaticities","0100":"imageWidth","0101":"imageHeight","0102":"bitsPerSample","0103":"compression","0106":"photometricInterpretation","0110":"model","0111":"stripOffsets","0112":"orientation","0115":"samplesPerPixel","0116":"rowsPerStrip","0117":"stripByteCounts","0128":"resolutionUnit","0131":"software","0132":"dateTime","0201":"jpegInterchangeFormat","0202":"jpegInterchangeFormatLength","0211":"ycbCrCoefficients","0212":"ycbCrSubSampling","0213":"ycbCrPositioning","0214":"referenceBlackWhite","829a":"exposureTime","829d":"fNumber","920a":"focalLength","927c":"makerNote",8298:"copyright",8769:"exifIFDPointer",8822:"exposureProgram",8824:"spectralSensitivity",8825:"gpsInfoIFDPointer",8827:"photographicSensitivity",8828:"oecf",8830:"sensitivityType",8831:"standardOutputSensitivity",8832:"recommendedExposureIndex",8833:"isoSpeed",8834:"isoSpeedLatitudeyyy",8835:"isoSpeedLatitudezzz",9e3:"exifVersion",9003:"dateTimeOriginal",9004:"dateTimeDigitized",9101:"componentsConfiguration",9102:"compressedBitsPerPixel",9201:"shutterSpeedValue",9202:"apertureValue",9203:"brightnessValue",9204:"exposureBiasValue",9205:"maxApertureValue",9206:"subjectDistance",9207:"meteringMode",9208:"lightSource",9209:"flash",9214:"subjectArea",9286:"userComment",9290:"subSecTime",9291:"subSecTimeOriginal",9292:"subSecTimeDigitized",a000:"flashpixVersion",a001:"colorSpace",a002:"pixelXDimension",a003:"pixelYDimension",a004:"relatedSoundFile",a005:"interoperabilityIFDPointer",a20b:"flashEnergy",a20c:"spatialFrequencyResponse",a20e:"focalPlaneXResolution",a20f:"focalPlaneYResolution",a40a:"sharpness",a40b:"deviceSettingDescription",a40c:"subjectDistanceRange",a210:"focalPlaneResolutionUnit",a214:"subjectLocation",a215:"exposureIndex",a217:"sensingMethod",a300:"fileSource",a301:"sceneType",a302:"cfaPattern",a401:"customRendered",a402:"exposureMode",a403:"whiteBalance",a404:"digitalZoomRatio",a405:"focalLengthIn35mmFilm",a406:"sceneCaptureType",a407:"gainControl",a408:"contrast",a409:"saturation",a420:"imageUniqueID",a430:"cameraOwnerName",a431:"bodySerialNumber",a432:"lensSpecification",a433:"lensMake",a434:"lensModel",a435:"lensSerialNumber",a500:"gamma"},gps:{"0000":"gpsVersionID","0001":"gpsLatitudeRef","0002":"gpsLatitude","0003":"gpsLongitudeRef","0004":"gpsLongitude","0005":"gpsAltitudeRef","0006":"gpsAltitude","0007":"gpsTimeStamp","0008":"gpsSatellites","0009":"gpsStatus","000a":"gpsMeasureMode","000b":"gpsDOP","000c":"gpsSpeedRef","000d":"gpsSpeed","000e":"gpsTrackRef","000f":"gpsTrack","0010":"gpsImgDirectionRef","0011":"gpsImgDirection","0012":"gpsMapDatum","0013":"gpsDestLatitudeRef","0014":"gpsDestLatitude","0015":"gpsDestLongitudeRef","0016":"gpsDestLongitude","0017":"gpsDestBearingRef","0018":"gpsDestBearing","0019":"gpsDestDistanceRef","001a":"gpsDestDistance","001b":"gpsProcessingMethod","001c":"gpsAreaInformation","001d":"gpsDateStamp","001e":"gpsDifferential","001f":"gpsHPositioningError"}};class Q{constructor(e){this.bigEndian=e,this.bytes=[0,1,1,2,4,8,1,1,2,4,8,4,8]}_getTagValue(e,i){const o=r=>this.bigEndian?y(e,r):O(e,r),s=r=>this.bigEndian?x(e,r):D(e,r);switch(i){case 1:return M(e,0);case 2:return e.toString("ascii").replace(/\0+$/,"");case 3:return o(0);case 4:return s(0);case 5:const r=[];for(var n=0;n<e.length;n+=8)r.push(s(n)/s(n+4));return r;case 7:return null;case 10:return s(0)/s(4);default:return"0x"+e.toString("hex")}}_decodeIDFEntries(e,i,o,s=!1){let n=2;const r={},g=l=>this.bigEndian?y(e,l):O(e,l),u=l=>this.bigEndian?x(e,l):D(e,l),h=g(0);for(let l=0;l<h;l++){const I=e.slice(n,n+2),w=g(n+2),C=u(n+4),P=this.bytes[w],F=C*P;let b=e.slice(n+8,n+12);if(F>4){const T=(this.bigEndian?x(b,0):D(b,0))-o;b=e.slice(T,T+F)}const R=this._getTagValue(b,w),A=this.bigEndian?E(I):E(I.reverse()),L=i[A];r[L]=R,n+=12}return r}decode(e,i){let o=e.buffer.slice(e.pos);const s=i.offsetToFirstIFD;if(s>o.length)return e.pos+=i.parent.length-16,{};const n=this._decodeIDFEntries(o,S.ifd,s),{exifIFDPointer:r,gpsInfoIFDPointer:g}=n;if(r&&(o=o.slice(r-s),n.subExif=this._decodeIDFEntries(o,S.ifd,r)),g){const u=g;o=o.slice(r?u-r:u-s),n.gpsInfo=this._decodeIDFEntries(o,S.gps,u,!0)}return e.pos+=i.parent.length-16,n}}const Y=t=>{const e=t?a:v,i=t?B:U;return new d({fortyTwo:e,offsetToFirstIFD:i,entries:new Q(t)})};class Z{decode(e,i){const s=j(e.buffer.slice(e.pos,e.pos+2))==="MM";return e.pos+=2,Y(s).decode(e,i).entries}}const $={name:()=>"EXIF",length:a,identifier:new k(6),entries:new Z},K={name:()=>"JFIF",length:a,identifier:new k(5),version:a,units:f,xDensity:a,yDensity:a,thumbnailWidth:f,thumbnailHeight:f};class ee{decode(e){const i=e.buffer.slice(e.pos);let o=0,s=i.indexOf(255);for(;s!==-1;){o=s;const n=i[o+1],r=n>=208&&n<=215;if(n!==0&&!r)break;s=i.indexOf(255,s+1)}return e.pos+=o,i.slice(0,o)}}const te=new d({scanComponentSelector:f,entropyCodingTable:new p(1)}),ne={name:()=>"SOS",length:a,numberOfImageComponents:f,componentSpecifications:new m(te,t=>t.numberOfImageComponents),startOfSpectral:f,endOfSpectral:f,successiveApproximationBit:new p(1),data:new ee},se=new d({id:f,samplingFactors:f,quantizationTableId:f}),c={name:()=>"SOF",length:a,precision:f,height:a,width:a,numberOfComponents:f,components:new m(se,t=>t.numberOfComponents)},ie={name:()=>"SOI"},oe={length:a,buf:new p(t=>t.length-2)},re=Array(63).fill(0).reduce((t,e,i)=>({...t,[i+65472]:oe}),{}),ae=new H(a,{...re,65472:c,65473:c,65474:c,65475:c,65476:X,65477:c,65478:c,65479:c,65481:c,65482:c,65483:c,65484:V,65485:c,65486:c,65487:c,65496:ie,65497:G,65498:ne,65499:q,65501:W,65504:K,65505:$}),ce=new m(ae),fe=t=>ce.fromBuffer(t).map(({version:i,...o})=>({type:i,...o})),ue={decode:fe};export{ue as _};
